hostname R2

interface Loopback0
 ip address 69.69.69.1 255.255.255.0
!
interface Serial0
 ip address 192.168.42.2 255.255.255.0
!

ip as-path access-list 1 permit ^42$
!
route-map test-as-path deny 10
 match as-path 1
!

router bgp 69
 network 69.69.69.0 mask 255.255.255.0
 neighbor 192.168.42.1 remote-as 42
 neighbor 192.168.42.1 route-map test-as-pa in
!



r1_CON --- r1_BGP --- r2_BGP -- r2_CON

1. r1_CON_BEST
2. r1_BGP_BEST
3. r1_OVERALL_BEST
   r2...
4. r1 --e----in---> r2

import func:

r2_BGP_S0_import.permit <= (r1_BGP_EXPORT_to_R2.permit) /\ test-as-path(r1_BGP_EXPORT_to_R2.as-path)

1) r2_BGP_S0_import.permit <= (r1_BGP_EXPORT_to_R2.permit)
2) r2_BGP_S0_import.permit <= false  ========> (not | r2_BGP_S0_import.permit)

==========> Solver = (not | r2_BGP_S0_import.permit) /\ r2_BGP_S0_import.permit <= (r1_BGP_EXPORT_to_R2.permit) /\ ...
==========> Solver is satisfiable represents property not hold.

 if ( permit? )
    then {prefix=...}
 else:
    {local_pref=..}



 peer(A, B): A -...-B

 import_A_from_C : DENY as-path ^*B*$
 all_A_IMPORT_routes: r_C_to_A,
                      r_M_to_A,
                      ...

